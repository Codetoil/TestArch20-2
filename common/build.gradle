architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    //accessWidenerPath = file("src/main/resources/examplemod.accesswidener")
}

repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url "https://maven.shedaniel.me/" }
    maven { url = 'https://maven.minecraftforge.net/' }
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation("net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}")
    // Remove the next line if you don't want to depend on the API
    modApi("dev.architectury:architectury:${rootProject.architectury_version}")

    //This is a horrible way of doing things to be fair, as you don't want Forge References in Common or Fabric / Quilt.
    //That said, GeckoLib does not release Core or a Common jar yet, so we'll have to work with this.
    modImplementation("software.bernie.geckolib:geckolib-forge-${rootProject.minecraft_version}:${rootProject.geckolib_version}")
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.mod_id
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}